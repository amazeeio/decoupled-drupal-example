server {
  listen ${NGINX_LISTEN:-8080};

  fastcgi_keep_conn on;
  root /app/${WEBROOT:-};
  add_header              X-AMAZEEIO 'backend' always;
  index  index.php;

  ### Nginx configuration for Drupal 7 and 8. This configuration makes use of
  ### drush (http:///drupal.org/project/drush) for site maintenance
  ### and like tasks:
  ###
  ### 1. Run the cronjobs.
  ### 2. Run the DB and code updates: drush up or drush upc followed by
  ###    drush updb to run any DB updates required by the code upgrades
  ###    that were performed.
  ### 3. Disabling of xmlrpc.xml and update.php: all updates are now
  ###    handled through drush.

  ## rewriting /index.php to / because after https://www.drupal.org/node/2599326
  ## autocomplete URLs are forced to go to index.php
  rewrite ^/index.php / last;

  ## The 'default' location.
  location / {

      if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' "$http_origin" always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-Cache-Hash' always;

          ### Tell client that this pre-flight info is valid for 20 days
          add_header 'Access-Control-Max-Age' 888888888;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
      }

      ## Disallow access to any dot files
      location ~ /\. {
          deny all;
          access_log off;
          log_not_found off;
      }

      ## Replicate the Apache <FilesMatch> directive of Drupal standard
      ## .htaccess. Disable access to any code files. Return a 404 to curtail
      ## information disclosure. Hide also the text files.
      location ~* ^(?:.+\.(?:htaccess|make|txt|yml|md||engine|inc|info|install|module|profile|po|pot|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl)$ {
          deny all;
          access_log off;
          log_not_found off;
      }

      ## Expiring per default for four weeks and one second, Drupal will overwrite that if necessary
      expires 2628001s;

      ## First we try the URI and relay to the /index.php?q=$escaped_uri&$args if not found.
      try_files $uri @drupal;
  }

  ########### Security measures ##########

  ## Restrict access to the strictly necessary PHP files. Reducing the
  ## scope for exploits. Handling of PHP code and the Drupal event loop.
  location @drupal {
      include /etc/nginx/fastcgi.conf;

      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-Cache-Hash' always;


      fastcgi_param  SCRIPT_NAME        /index.php;
      fastcgi_param  SCRIPT_FILENAME    $realpath_root/index.php;
      fastcgi_pass ${NGINX_FASTCGI_PASS:-php}:9000;
  }

  ## Trying to access private files directly returns a 404.
  location /sites/default/files/private/ {
      internal;
  }

  ## Disallow access to patches directory.
  location ^~ /patches {
      deny all;
      access_log off;
      log_not_found off;
  }

  ## Disallow access to backup directory.
  location ^~ /backup {
      deny all;
      access_log off;
      log_not_found off;
  }

  ## Disallow access to vagrant directory.
  location ^~ /vagrant {
      deny all;
      access_log off;
      log_not_found off;
  }

  ## Disallow access to /core/vendor.
  location ^~ /core/vendor {
      deny all;
      access_log off;
      log_not_found off;
  }

  ## Disallow access to /vendor.
  location ^~ /vendor {
      deny all;
      access_log off;
      log_not_found off;
  }

  ## Disable access logs for robots.txt.
  location = /robots.txt {
      access_log off;
      ## Add support for the robotstxt module
      ## http://drupal.org/project/robotstxt.
      try_files $uri @drupal;
  }

  location = /humans.txt {
      access_log off;
      ## Add support for the humanstxt module
      ## http://drupal.org/project/humanstxt.
      try_files $uri @drupal;
  }

  ## Support for favicon. Return an 1x1 transparent GIF if it doesn't
  ## exist.
  location = /favicon.ico {
      expires 30d;
      try_files /favicon.ico @empty;
  }

  ## Return an in memory 1x1 transparent GIF.
  location @empty {
      expires 30d;
      empty_gif;
  }

  # Any other attempt to access PHP files does not have access.
  location ~* ^.+\.php$ {
      deny all;
  }

  ### Directives for installing drupal.
  location = /install.php {
        fastcgi_pass ${NGINX_FASTCGI_PASS:-php}:9000;
  }
  ### Directives for installing drupal.
  location = /core/install.php {
        fastcgi_pass ${NGINX_FASTCGI_PASS:-php}:9000;
  }

}